{
    # Empty global options block
}

portainer.home.arpa {
    # This doesn't work yet, need to figure out docker networking properly
    # reverse_proxy portainer:9443

    # For now, just redirect to the right port
    redir https://portainer.home.arpa:9443{uri}
}

prowlarr.home.arpa {
    reverse_proxy prowlarr:9696
}

radarr.home.arpa {
    reverse_proxy radarr:7878
}

sonarr.home.arpa {
    reverse_proxy sonarr:8989
}

qbittorrent.home.arpa {
    reverse_proxy qbittorrent:8080
}

jellyfin.home.arpa {
    reverse_proxy jellyfin:8096
}

jellyseerr.home.arpa {
    reverse_proxy jellyseerr:5055
}

# Must use wildcard certificate for sub-subdomains of DuckDNS, because these
#   custom subdomains don't have their own DNS record and therefore fail the
#   ACME DNS-01 challenge
*.{$DOMAIN} {
    tls {
        dns duckdns {env.DUCKDNS_API_TOKEN}
    }

    # Media services
    @jellyfin     host jellyfin.{$DOMAIN}
    @jellyseerr   host jellyseerr.{$DOMAIN}
    @prowlarr     host prowlarr.{$DOMAIN}
    @radarr       host radarr.{$DOMAIN}
    @sonarr       host sonarr.{$DOMAIN}
    @qbittorrent  host qbittorrent.{$DOMAIN}

    reverse_proxy @jellyfin    jellyfin:8096
    reverse_proxy @jellyseerr  jellyseerr:5055
    reverse_proxy @prowlarr    prowlarr:9696
    reverse_proxy @radarr      radarr:7878
    reverse_proxy @sonarr      sonarr:8989
    reverse_proxy @qbittorrent qbittorrent:8080

    # Network services
    @librespeed         host speedtest.{$DOMAIN}
    @speedtest-tracker  host speedtest-tracker.{$DOMAIN}
    # @unifi              host unifi.{$DOMAIN}

    reverse_proxy @librespeed         librespeed:80
    reverse_proxy @speedtest-tracker  speedtest-tracker:80
    # reverse_proxy @unifi              unifi:80

    # Auto redirect common typos
    @typo_jellyseerr host jellyseer.{$DOMAIN}
    @typo_qbittorrent host qbitorent.{$DOMAIN} qbitorrent.{$DOMAIN} qbittorent.{$DOMAIN}

    redir @typo_jellyseerr  https://jellyseerr.{$DOMAIN}
    redir @typo_qbittorrent https://qbittorrent.{$DOMAIN}
}
